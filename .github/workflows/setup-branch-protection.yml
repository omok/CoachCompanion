name: Setup Branch Protection

# This workflow sets up branch protection rules
# Run manually or when the repository is first set up
on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to protect'
        required: true
        default: 'main'
        type: string

jobs:
  setup-protection:
    runs-on: ubuntu-latest
    if: github.actor == github.repository_owner
    
    steps:
    - name: Setup branch protection
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const branch = '${{ inputs.target_branch }}';
          
          try {
            await github.rest.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branch,
              required_status_checks: {
                strict: true,
                contexts: [
                  'CI / test (18.x)',
                  'CI / test (20.x)', 
                  'CI / build',
                  'PR Checks / quality-gate',
                  'PR Checks / security-scan'
                ]
              },
              enforce_admins: true,
              required_pull_request_reviews: {
                required_approving_review_count: 1,
                dismiss_stale_reviews: true,
                require_code_owner_reviews: false
              },
              restrictions: null
            });
            
            console.log(`‚úÖ Branch protection configured for ${branch}`);
            
            // Create a comment with the configuration
            const summary = `## üõ°Ô∏è Branch Protection Configured
            
            Branch protection has been set up for \`${branch}\` with the following rules:
            
            ### Required Status Checks
            - CI / test (Node 18.x)
            - CI / test (Node 20.x)
            - CI / build
            - PR Checks / quality-gate
            - PR Checks / security-scan
            
            ### Pull Request Requirements
            - ‚úÖ Require 1 approving review
            - ‚úÖ Dismiss stale reviews when new commits are pushed
            - ‚úÖ Require status checks to pass before merging
            - ‚úÖ Require branches to be up to date before merging
            
            ### Admin Enforcement
            - ‚úÖ Include administrators in these restrictions
            
            **Next Steps:**
            1. Test the protection by creating a PR
            2. Ensure all team members understand the new workflow
            3. Consider adding CODEOWNERS file for automatic reviewers
            `;
            
            // This will appear in the workflow run summary
            core.summary.addRaw(summary);
            await core.summary.write();
            
          } catch (error) {
            console.error('‚ùå Failed to configure branch protection:', error);
            throw error;
          }

    - name: Verify protection settings
      uses: actions/github-script@v7
      with:
        script: |
          const branch = '${{ inputs.target_branch }}';
          
          try {
            const protection = await github.rest.repos.getBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branch
            });
            
            console.log('‚úÖ Branch protection verification:');
            console.log(`- Required status checks: ${protection.data.required_status_checks?.contexts?.length || 0} configured`);
            console.log(`- Required reviews: ${protection.data.required_pull_request_reviews?.required_approving_review_count || 0}`);
            console.log(`- Admin enforcement: ${protection.data.enforce_admins?.enabled ? 'Yes' : 'No'}`);
            
          } catch (error) {
            console.error('‚ö†Ô∏è Could not verify branch protection:', error.message);
          }